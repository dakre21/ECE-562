Layout:

SRC
- Contains relative benchmarks, libraries, and interfaces in c/c++
- Soon to contain a kernel...

SIM
- Contains gem5 simulator and relative scripts to run against different executables
- Contians lttng script to trace userspace or kernel events given a user space application

DOCS
- Contains project related research documents

TODOs:
Benchmarks (C/C++)
- Create RT IO intensive benchmark (ARM/x86)
- Create RT Memory intensive benchmark (ARM/x86)

Simulation
- Get metrics similarly to how x86 is done for ARM targets
- Try to get GEM5 working for benchmarks (may not happen.. m5threads doesn't work out well enough- no thread scheduler facade)

Analytics
- CSV being generated for x86; need do the same for ARM
- Start making graphs of results 

Kernel
- Look into a suitable kernel to potentially look into improvements to make it more RT 
-- Generally looking for the following:
--- Each process has its own page table (ideally page size should be smal... lower context switching time)
--- Context switching ring buffers have userspace/kernel protection
--- NUMA/distributed memory better for process pinned to separate core (locking cache on those cores ideal)
--- UMA better for process running system wide on all cores/shared memory

